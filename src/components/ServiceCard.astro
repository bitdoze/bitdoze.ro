---
import { Icon } from "astro-icon/components";

interface Props {
  title: string;
  description: string;
  icon: string;
  link?: string;
  ctaText?: string;
  index?: number;
  badge?: {
    text: string;
    type?: "primary" | "secondary" | "accent" | "success" | "warning" | "error";
  };
  price?: string;
}

const {
  title,
  description,
  icon,
  link,
  ctaText = "AflÄƒ Mai Multe",
  index = 0,
  badge,
  price,
} = Astro.props;
---

<div
  class="service-card group relative overflow-hidden h-full"
  data-index={index}
>
  <!-- Background gradient overlay -->
  <div class="card-gradient-overlay"></div>

  <!-- Animated background elements -->
  <div class="card-bg-shapes">
    <div class="bg-shape bg-shape-1"></div>
    <div class="bg-shape bg-shape-2"></div>
  </div>

  <!-- Card content -->
  <div class="card-content">
    <!-- Header with badge and icon -->
    <div class="card-header">
      {
        badge && (
          <div class={`service-badge service-badge-${badge.type || "primary"}`}>
            <span class="badge-text">{badge.text}</span>
          </div>
        )
      }

      <div class="icon-wrapper">
        <div class="icon-container">
          <Icon name={icon} class="service-icon" />
        </div>
        <div class="icon-glow"></div>
      </div>
    </div>

    <!-- Content -->
    <div class="card-body">
      <h3 class="service-title">{title}</h3>
      <p class="service-description">{description}</p>

      {
        price && (
          <div class="price-tag">
            <Icon name="mdi:currency-usd" class="price-icon" />
            <span class="price-text">{price}</span>
          </div>
        )
      }
    </div>

    <!-- Footer with CTA -->
    <div class="card-footer">
      {
        link ? (
          <a href={link} class="service-cta">
            <span class="cta-text">{ctaText}</span>
            <div class="cta-arrow">
              <Icon name="mdi:arrow-right" class="arrow-icon" />
            </div>
          </a>
        ) : (
          <div class="service-cta">
            <span class="cta-text">{ctaText}</span>
            <div class="cta-arrow">
              <Icon name="mdi:arrow-right" class="arrow-icon" />
            </div>
          </div>
        )
      }
    </div>
  </div>

  <!-- Hover effects -->
  <div class="hover-border"></div>
  <div class="hover-glow"></div>
</div>

<style>
  .service-card {
    position: relative;
    border-radius: 20px;
    background: var(--color-background);
    border: 1px solid rgba(var(--color-text-lighter-rgb), 0.1);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    cursor: pointer;
    overflow: hidden;
    min-height: 320px;
  }

  .service-card:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
  }

  /* Background gradient overlay */
  .card-gradient-overlay {
    position: absolute;
    inset: 0;
    background: linear-gradient(
      135deg,
      rgba(var(--color-primary-rgb), 0.02) 0%,
      rgba(var(--color-secondary-rgb), 0.02) 50%,
      rgba(var(--color-accent-rgb), 0.02) 100%
    );
    opacity: 0;
    transition: opacity 0.4s ease;
  }

  .service-card:hover .card-gradient-overlay {
    opacity: 1;
  }

  /* Animated background shapes */
  .card-bg-shapes {
    position: absolute;
    inset: 0;
    overflow: hidden;
    opacity: 0;
    transition: opacity 0.4s ease;
  }

  .service-card:hover .card-bg-shapes {
    opacity: 1;
  }

  .bg-shape {
    position: absolute;
    border-radius: 50%;
    filter: blur(20px);
  }

  .bg-shape-1 {
    width: 100px;
    height: 100px;
    top: -20px;
    right: -20px;
    background: rgba(var(--color-primary-rgb), 0.1);
    animation: float 6s ease-in-out infinite;
  }

  .bg-shape-2 {
    width: 60px;
    height: 60px;
    bottom: -10px;
    left: -10px;
    background: rgba(var(--color-secondary-rgb), 0.1);
    animation: float 8s ease-in-out infinite reverse;
  }

  @keyframes float {
    0%,
    100% {
      transform: translateY(0px) rotate(0deg);
    }
    50% {
      transform: translateY(-10px) rotate(180deg);
    }
  }

  /* Card content */
  .card-content {
    position: relative;
    z-index: 2;
    padding: 2rem;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  /* Header */
  .card-header {
    margin-bottom: 1.5rem;
  }

  .service-badge {
    display: inline-flex;
    align-items: center;
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.75rem;
    font-weight: 600;
    margin-bottom: 1rem;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
  }

  .service-badge-primary {
    background: rgba(var(--color-primary-rgb), 0.1);
    color: var(--color-primary);
    border-color: rgba(var(--color-primary-rgb), 0.2);
  }

  .service-badge-secondary {
    background: rgba(var(--color-secondary-rgb), 0.1);
    color: var(--color-secondary);
    border-color: rgba(var(--color-secondary-rgb), 0.2);
  }

  .service-badge-accent {
    background: rgba(var(--color-accent-rgb), 0.1);
    color: var(--color-accent);
    border-color: rgba(var(--color-accent-rgb), 0.2);
  }

  .service-badge-success {
    background: rgba(var(--color-success-rgb), 0.1);
    color: var(--color-success);
    border-color: rgba(var(--color-success-rgb), 0.2);
  }

  .service-badge-warning {
    background: rgba(var(--color-warning-rgb), 0.1);
    color: var(--color-warning);
    border-color: rgba(var(--color-warning-rgb), 0.2);
  }

  .service-badge-error {
    background: rgba(var(--color-error-rgb), 0.1);
    color: var(--color-error);
    border-color: rgba(var(--color-error-rgb), 0.2);
  }

  /* Icon */
  .icon-wrapper {
    position: relative;
    display: inline-block;
  }

  .icon-container {
    position: relative;
    width: 60px;
    height: 60px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(
      135deg,
      rgba(var(--color-primary-rgb), 0.1),
      rgba(var(--color-secondary-rgb), 0.1)
    );
    border-radius: 16px;
    border: 1px solid rgba(var(--color-primary-rgb), 0.2);
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .service-icon {
    width: 28px;
    height: 28px;
    color: var(--color-primary);
    transition: all 0.4s ease;
  }

  .icon-glow {
    position: absolute;
    inset: -2px;
    background: linear-gradient(
      135deg,
      var(--color-primary),
      var(--color-secondary)
    );
    border-radius: 18px;
    opacity: 0;
    filter: blur(8px);
    transition: opacity 0.4s ease;
  }

  .service-card:hover .icon-container {
    transform: scale(1.1) rotate(5deg);
    background: linear-gradient(
      135deg,
      rgba(var(--color-primary-rgb), 0.2),
      rgba(var(--color-secondary-rgb), 0.2)
    );
    border-color: rgba(var(--color-primary-rgb), 0.4);
  }

  .service-card:hover .icon-glow {
    opacity: 0.3;
  }

  .service-card:hover .service-icon {
    color: var(--color-primary);
    transform: scale(1.1);
  }

  /* Body content */
  .card-body {
    flex: 1;
    margin-bottom: 1.5rem;
  }

  .service-title {
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--color-text);
    margin-bottom: 1rem;
    line-height: 1.3;
    transition: color 0.3s ease;
  }

  .service-card:hover .service-title {
    color: var(--color-primary);
  }

  .service-description {
    color: var(--color-text-light);
    line-height: 1.6;
    margin-bottom: 1rem;
  }

  .price-tag {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    background: rgba(var(--color-success-rgb), 0.1);
    color: var(--color-success);
    border-radius: 20px;
    font-size: 0.875rem;
    font-weight: 600;
    border: 1px solid rgba(var(--color-success-rgb), 0.2);
  }

  .price-icon {
    width: 16px;
    height: 16px;
  }

  /* Footer */
  .card-footer {
    margin-top: auto;
  }

  .service-cta {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 1rem 1.5rem;
    background: rgba(var(--color-primary-rgb), 0.05);
    border: 1px solid rgba(var(--color-primary-rgb), 0.1);
    border-radius: 12px;
    transition: all 0.3s ease;
    text-decoration: none;
    color: inherit;
  }

  .service-cta:hover {
    background: rgba(var(--color-primary-rgb), 0.1);
    border-color: rgba(var(--color-primary-rgb), 0.3);
    transform: translateX(4px);
  }

  .cta-text {
    font-weight: 600;
    color: var(--color-primary);
    transition: color 0.3s ease;
  }

  .cta-arrow {
    width: 32px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: var(--color-primary);
    border-radius: 8px;
    transition: all 0.3s ease;
  }

  .arrow-icon {
    width: 16px;
    height: 16px;
    color: white;
    transition: transform 0.3s ease;
  }

  .service-cta:hover .cta-arrow {
    transform: translateX(4px);
    background: var(--color-primary-dark);
  }

  .service-cta:hover .arrow-icon {
    transform: translateX(2px);
  }

  /* Hover effects */
  .hover-border {
    position: absolute;
    inset: 0;
    border-radius: 20px;
    padding: 1px;
    background: linear-gradient(
      135deg,
      var(--color-primary),
      var(--color-secondary),
      var(--color-accent)
    );
    opacity: 0;
    transition: opacity 0.4s ease;
  }

  .hover-border::before {
    content: "";
    position: absolute;
    inset: 1px;
    background: var(--color-background);
    border-radius: 19px;
  }

  .service-card:hover .hover-border {
    opacity: 1;
  }

  .hover-glow {
    position: absolute;
    inset: -20px;
    background: linear-gradient(
      135deg,
      var(--color-primary),
      var(--color-secondary)
    );
    border-radius: 40px;
    opacity: 0;
    filter: blur(30px);
    transition: opacity 0.4s ease;
    z-index: -1;
  }

  .service-card:hover .hover-glow {
    opacity: 0.1;
  }

  /* Stagger animation for multiple cards */
  .service-card {
    animation: slideInUp 0.6s ease-out forwards;
    animation-delay: calc(var(--index, 0) * 0.1s);
    opacity: 0;
    transform: translateY(30px);
  }

  @keyframes slideInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Dark mode adjustments */
  :global(.dark) .service-card {
    background: var(--color-dark-background-alt);
    border-color: rgba(255, 255, 255, 0.1);
  }

  :global(.dark) .service-title {
    color: var(--color-dark-text);
  }

  :global(.dark) .service-description {
    color: var(--color-dark-text-light);
  }

  :global(.dark) .service-card:hover .service-title {
    color: var(--color-primary-light);
  }

  :global(.dark) .hover-border::before {
    background: var(--color-dark-background-alt);
  }

  :global(.dark) .service-cta {
    background: rgba(var(--color-primary-rgb), 0.1);
    border-color: rgba(var(--color-primary-rgb), 0.2);
  }

  :global(.dark) .service-cta:hover {
    background: rgba(var(--color-primary-rgb), 0.2);
    border-color: rgba(var(--color-primary-rgb), 0.4);
  }

  /* Responsive design */
  @media (max-width: 768px) {
    .card-content {
      padding: 1.5rem;
    }

    .service-title {
      font-size: 1.25rem;
    }

    .icon-container {
      width: 50px;
      height: 50px;
    }

    .service-icon {
      width: 24px;
      height: 24px;
    }
  }
</style>

<script>
  // Add CSS custom property for stagger animation
  document.addEventListener("DOMContentLoaded", () => {
    const serviceCards = document.querySelectorAll(".service-card");
    serviceCards.forEach((card, index) => {
      (card as HTMLElement).style.setProperty("--index", index.toString());
    });
  });
</script>
