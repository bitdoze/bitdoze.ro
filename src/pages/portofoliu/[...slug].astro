---
import { getCollection, getEntry, type CollectionEntry } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { Icon } from "astro-icon/components";
import CTA from "../../components/CTA.astro";

export async function getStaticPaths() {
  const portofoliuEntries = await getCollection("portofoliu");
  return portofoliuEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

interface Props {
  entry: CollectionEntry<"portofoliu">;
}

const { entry } = Astro.props;
const { Content } = await entry.render();

// Format date
const dateFormatter = new Intl.DateTimeFormat("ro-RO", {
  year: "numeric",
  month: "long",
  day: "numeric",
});
const formattedDate = dateFormatter.format(entry.data.data);
---

<Layout
  title={`${entry.data.title} | Portofoliu BitDoze`}
  description={entry.data.descriere}
  ogType="article"
>
  <!-- Hero Section -->
  <section
    class="section-padding relative overflow-hidden"
    style="background-color: var(--color-background-alt);"
  >
    <!-- Background gradient -->
    <div
      class="absolute inset-0 opacity-50 dark:opacity-20"
      style="background: linear-gradient(to bottom right, rgba(var(--color-primary-rgb), 0.1), var(--color-background), rgba(var(--color-secondary-rgb), 0.1));"
    >
    </div>

    <!-- Animated background elements -->
    <div class="absolute inset-0 overflow-hidden">
      <div class="blob blob-1"></div>
      <div class="blob blob-2"></div>
      <div class="blob blob-3"></div>
    </div>

    <!-- Grid pattern -->
    <div class="absolute inset-0 opacity-5">
      <div class="grid-pattern"></div>
    </div>

    <div class="container max-w-4xl relative z-10">
      <div class="mb-6">
        <a
          href="/portofoliu"
          class="inline-flex items-center text-sm font-medium transition-all hover:-translate-x-1 mb-4"
          style="color: var(--color-primary);"
        >
          <Icon name="mdi:arrow-left" class="mr-1.5 h-4 w-4" />
          Înapoi la portofoliu
        </a>
        <h1 class="text-4xl md:text-5xl font-bold mb-4">{entry.data.title}</h1>
        <p class="text-lg" style="color: var(--color-text-light);">
          {entry.data.descriere}
        </p>
        <div class="mt-4 flex flex-wrap gap-2">
          <span
            class="text-sm px-3 py-1 rounded-full bg-opacity-10"
            style="background-color: rgba(var(--color-primary-rgb), 0.1); color: var(--color-primary);"
          >
            Publicat: {formattedDate}
          </span>
        </div>
      </div>
    </div>
  </section>

  <!-- Project Details -->
  <section class="section-padding">
    <div class="container max-w-6xl">
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-12">
        <!-- Left Column - Featured Image -->
        <div class="order-1">
          <div class="project-image sticky top-8">
            <img
              src={entry.data.imagine}
              alt={entry.data.title}
              class="w-full h-auto object-cover rounded-lg shadow-lg"
            />
          </div>
        </div>

        <!-- Right Column - Details and Content -->
        <div class="order-2 space-y-8">
          <!-- Project Info Box -->
          <div
            class="p-6"
            style="background-color: var(--color-background-alt); border-radius: var(--radius-lg); box-shadow: var(--shadow-md); border: 1px solid rgba(0,0,0,0.05);"
          >
            <h3 class="text-lg font-semibold mb-4">Detalii Proiect</h3>

            <!-- Stack Section -->
            <div class="mb-6">
              <h4
                class="text-sm font-semibold mb-3"
                style="color: var(--color-text);"
              >
                Stack
              </h4>
              <div class="flex flex-wrap gap-2">
                {
                  entry.data.stack.map((tech) => (
                    <span
                      class="stack-tag inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium mr-1 mb-1"
                      style="background-color: rgba(var(--color-primary-rgb), 0.1); color: var(--color-primary);"
                    >
                      {tech}
                    </span>
                  ))
                }
              </div>
            </div>

            <!-- Servicii Section -->
            <div class="mb-6">
              <h4
                class="text-sm font-semibold mb-3"
                style="color: var(--color-text);"
              >
                Servicii
              </h4>
              <div class="flex flex-wrap gap-2">
                {
                  entry.data.servicii.map((serviciu) => (
                    <span
                      class="service-tag inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium mr-1 mb-1"
                      style="background-color: rgba(var(--color-secondary-rgb), 0.1); color: var(--color-secondary);"
                    >
                      {serviciu}
                    </span>
                  ))
                }
              </div>
            </div>

            <!-- CTA Button -->
            <a
              href={entry.data.url}
              target="_blank"
              rel="noopener noreferrer"
              class="btn btn-primary w-full h-12 text-base"
            >
              <span class="flex items-center justify-center gap-2"
                >Vezi proiect live<Icon
                  name="mdi:external-link"
                  class="h-4 w-4"
                /></span
              >
            </a>
          </div>

          <!-- Navigation Box -->
          <div
            class="p-6"
            style="background-color: var(--color-background-alt); border-radius: var(--radius-lg); box-shadow: var(--shadow-md); border: 1px solid rgba(0,0,0,0.05);"
          >
            <h3 class="text-lg font-semibold mb-4">Explorează</h3>
            <ul class="space-y-3">
              <li>
                <a
                  href="/portofoliu"
                  class="inline-flex items-center text-sm transition-all hover:translate-x-1"
                  style="color: var(--color-primary);"
                >
                  <Icon name="mdi:folder-multiple" class="mr-1.5 h-4 w-4" />
                  Toate proiectele
                </a>
              </li>
              <li>
                <a
                  href="/services"
                  class="inline-flex items-center text-sm transition-all hover:translate-x-1"
                  style="color: var(--color-primary);"
                >
                  <Icon name="mdi:cog" class="mr-1.5 h-4 w-4" />
                  Serviciile noastre
                </a>
              </li>
              <li>
                <a
                  href="/contact"
                  class="inline-flex items-center text-sm transition-all hover:translate-x-1"
                  style="color: var(--color-primary);"
                >
                  <Icon name="mdi:email" class="mr-1.5 h-4 w-4" />
                  Contactează-ne
                </a>
              </li>
            </ul>
          </div>

          <!-- Main Content -->
          <div
            class="prose prose-lg max-w-none"
            style="color: var(--color-text);"
          >
            <Content />
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- CTA Section (full-width via component's own layout) -->
  <CTA
    title="Pregătit să începi propriul tău proiect?"
    subtitle="Contactează-ne astăzi pentru a discuta despre viziunea ta și a vedea cum te putem ajuta să o transformi în realitate."
    ctaText="Contactează-ne"
    ctaLink="/contact"
    secondaryText="Vezi serviciile noastre"
    secondaryLink="/servicii"
  />
</Layout>

<style is:global>
  .prose h2 {
    color: var(--color-text);
    font-weight: 700;
    font-size: 1.5rem;
    margin-top: 2rem;
    margin-bottom: 1rem;
    position: relative;
    padding-left: 1rem;
  }

  .prose h2::before {
    content: "";
    position: absolute;
    left: 0;
    top: 0.25rem;
    bottom: 0.25rem;
    width: 4px;
    background-color: var(--color-primary);
    border-radius: 2px;
  }

  .prose p {
    color: var(--color-text-light);
    margin-bottom: 1.25rem;
    line-height: 1.7;
  }

  .prose ul {
    color: var(--color-text-light);
    margin-bottom: 1.25rem;
    padding-left: 1.5rem;
  }

  .prose li {
    margin-bottom: 0.5rem;
  }

  /* Grid pattern */
  .grid-pattern {
    background-image: linear-gradient(rgba(0, 0, 0, 0.05) 1px, transparent 1px),
      linear-gradient(90deg, rgba(0, 0, 0, 0.05) 1px, transparent 1px);
    background-size: 25px 25px;
    height: 100%;
    width: 100%;
  }

  /* Background blobs */
  .blob {
    position: absolute;
    border-radius: 50%;
    filter: blur(60px);
  }

  .blob-1 {
    width: 600px;
    height: 600px;
    left: -100px;
    top: -100px;
    background: rgba(var(--color-primary-rgb), 0.05);
    animation: blob-move 25s infinite alternate;
  }

  .blob-2 {
    width: 400px;
    height: 400px;
    right: -50px;
    top: 30%;
    background: rgba(56, 189, 248, 0.05);
    animation: blob-move 18s infinite alternate-reverse;
  }

  .blob-3 {
    width: 300px;
    height: 300px;
    bottom: 10%;
    left: 20%;
    background: rgba(251, 113, 133, 0.05);
    animation: blob-move 15s infinite alternate;
  }

  @keyframes blob-move {
    0% {
      transform: translate(0, 0) scale(1);
    }
    33% {
      transform: translate(20px, -20px) scale(1.05);
    }
    66% {
      transform: translate(-20px, 20px) scale(0.95);
    }
    100% {
      transform: translate(0, 0) scale(1);
    }
  }

  /* Animations */
  @keyframes animate-blob {
    0% {
      transform: translate(0px, 0px) scale(1);
    }
    33% {
      transform: translate(30px, -50px) scale(1.1);
    }
    66% {
      transform: translate(-20px, 20px) scale(0.9);
    }
    100% {
      transform: translate(0px, 0px) scale(1);
    }
  }

  .animate-blob {
    animation: animate-blob 7s ease-in-out infinite;
  }

  /* Dark mode adjustments */
  :global(.dark) .grid-pattern {
    background-image: linear-gradient(
        rgba(255, 255, 255, 0.05) 1px,
        transparent 1px
      ),
      linear-gradient(90deg, rgba(255, 255, 255, 0.05) 1px, transparent 1px);
  }

  /* CTA uses global .btn */

  .stack-tag,
  .service-tag {
    transition: all 0.3s ease;
  }

  .stack-tag:hover {
    background-color: rgba(var(--color-primary-rgb), 0.2) !important;
    transform: translateY(-1px);
  }

  .service-tag:hover {
    background-color: rgba(var(--color-secondary-rgb), 0.2) !important;
    transform: translateY(-1px);
  }
</style>
