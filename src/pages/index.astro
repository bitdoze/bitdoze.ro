---
import Layout from "../layouts/Layout.astro";
import Hero from "../components/Hero.astro";
import Welcome from "../components/Welcome.astro";
import Services from "../components/Services.astro";
import Testimonials from "../components/Testimonials.astro";
import Portofoliu from "../components/Portofoliu.astro";
import CTA from "../components/CTA.astro";
import ServiceCard from "../components/ServiceCard.astro";
import SectionHeader from "../components/SectionHeader.astro";
import TrustBadges from "../components/TrustBadges.astro";
import { Icon } from "astro-icon/components";

import { homePageConfig } from "../config/pages";
import { getCollection } from "astro:content";

// Extract sections from config
const heroSection = homePageConfig.sections.find(
  (section) => section.type === "hero"
);
const welcomeSection = homePageConfig.sections.find(
  (section) => section.type === "welcome"
);
const servicesSection = homePageConfig.sections.find(
  (section) => section.type === "services"
);
const testimonialsSection = homePageConfig.sections.find(
  (section) => section.type === "testimonials"
);
const portfolioSection = homePageConfig.sections.find(
  (section) => section.type === "portfolio"
);
const ctaSection = homePageConfig.sections.find(
  (section) => section.type === "cta"
);

// Get all non-draft services entries and sort by order
const servicii = await getCollection("servicii", ({ data }) => {
  return !data.draft;
});

// Sort by order field and limit to 3
const featuredServices = servicii
  .sort((a, b) => a.data.ordine - b.data.ordine)
  .slice(0, 3);
---

<Layout
  title={homePageConfig.title}
  description={homePageConfig.description}
  image={homePageConfig.ogImage}
>
  {
    welcomeSection && (
      <>
        <Welcome
          title={welcomeSection.title}
          subtitle={welcomeSection.subtitle}
          features={welcomeSection.features}
          ctas={welcomeSection.ctas}
          image={heroSection?.imageUrl || welcomeSection.image}
          badge={welcomeSection.badge}
          welcomeButtons={welcomeSection.ctas.welcome}
        />
        <div
          class="trust-badges-hero-section"
          style="background-color: var(--color-background-alt); padding: 3rem 0; margin-top: -2rem; border-bottom: 1px solid rgba(var(--color-text-lighter-rgb), 0.1);"
        >
          <div class="container">
            <TrustBadges variant="compact" />
          </div>
        </div>
      </>
    )
  }
  {
    servicesSection && (
      <section
        class="section-padding"
        style="background-color: var(--color-background-alt);"
      >
        <div class="container">
          <SectionHeader
            title={servicesSection.title}
            subtitle={servicesSection.subtitle}
            alignment="center"
            textSize="md"
            decorative={true}
            className="mb-20"
          />

          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {featuredServices.map((service, index) => (
              <div class="service-card-wrapper group relative">
                {/* Badge */}
                {index === 0 && (
                  <div class="service-badge-container">
                    <div class="service-badge service-badge-popular">
                      <Icon name="mdi:star" class="badge-icon" />
                      <span class="badge-text">Popular</span>
                    </div>
                  </div>
                )}
                {index === 1 && (
                  <div class="service-badge-container">
                    <div class="service-badge service-badge-recommended">
                      <Icon name="mdi:thumb-up" class="badge-icon" />
                      <span class="badge-text">Recomandat</span>
                    </div>
                  </div>
                )}
                {index === 2 && (
                  <div class="service-badge-container">
                    <div class="service-badge service-badge-new">
                      <Icon name="mdi:new-box" class="badge-icon" />
                      <span class="badge-text">Nou</span>
                    </div>
                  </div>
                )}

                <a
                  href={`/servicii/${service.slug}`}
                  class="service-card-link block h-full"
                >
                  <div
                    class="h-full p-6 flex flex-col rounded-lg transition-all duration-300 group-hover:-translate-y-2 group-hover:shadow-lg"
                    style="background-color: var(--color-background); box-shadow: var(--shadow-sm); border: 1px solid rgba(var(--color-text-lighter-rgb), 0.1); border-radius: var(--radius-lg);"
                  >
                    <div
                      class="inline-flex items-center justify-center w-14 h-14 mb-5 rounded-full"
                      style="background-color: rgba(var(--color-primary-rgb), 0.1);"
                    >
                      <Icon
                        name={service.data.icon}
                        class="h-7 w-7"
                        style="color: var(--color-primary);"
                      />
                    </div>
                    <h3 class="text-2xl font-bold mb-3 group-hover:text-primary transition-colors">
                      {service.data.title}
                    </h3>
                    <p
                      class="mb-5 flex-grow"
                      style="color: var(--color-text-light);"
                    >
                      {service.data.descriere}
                    </p>

                    {service.data.pret && (
                      <div
                        class="inline-flex items-center px-3 py-1 mb-4 rounded-full text-sm font-medium w-fit"
                        style="background-color: rgba(var(--color-primary-rgb), 0.1); color: var(--color-primary);"
                      >
                        <Icon name="mdi:currency-usd" class="mr-1 h-4 w-4" />
                        {service.data.pret}
                      </div>
                    )}

                    <span
                      class="inline-flex items-center text-sm font-medium transition-all group-hover:translate-x-1"
                      style="color: var(--color-primary);"
                    >
                      {servicesSection?.cta?.text || "Vezi Detalii"}
                      <Icon name="mdi:arrow-right" class="ml-1.5 h-4 w-4" />
                    </span>
                  </div>
                </a>
              </div>
            ))}
          </div>

          <div class="text-center mt-12">
            <a
              href="/servicii"
              class="btn btn-primary inline-flex items-center justify-center px-6 py-3 font-medium rounded-lg shadow-md hover:shadow-lg transition-all duration-300"
            >
              Vezi Toate Serviciile
              <Icon name="mdi:arrow-right" class="ml-2 h-5 w-5" />
            </a>
          </div>
        </div>
      </section>
    )
  }

  {
    testimonialsSection && (
      <Testimonials
        title={testimonialsSection.title}
        subtitle={testimonialsSection.subtitle}
        testimonials={testimonialsSection.testimonials}
      />
    )
  }

  {
    portfolioSection && (
      <Portofoliu
        title={portfolioSection.title}
        subtitle={portfolioSection.subtitle}
        ctaText={portfolioSection.cta?.text}
        ctaLink={portfolioSection.cta?.link}
      />
    )
  }

  {
    ctaSection && (
      <CTA
        title={ctaSection.title}
        subtitle={ctaSection.subtitle}
        ctaText={ctaSection.ctaPrimary.text}
        ctaLink={ctaSection.ctaPrimary.link}
        secondaryText={ctaSection.ctaSecondary?.text}
        secondaryLink={ctaSection.ctaSecondary?.link}
        trustedBy={ctaSection.trustedBy}
      />
    )
  }
</Layout>

<style>
  .trust-badges-hero-section {
    position: relative;
    z-index: 10;
    background: linear-gradient(
      to bottom,
      rgba(var(--color-background-alt-rgb), 0.5),
      var(--color-background-alt)
    );
  }

  :global(.dark) .trust-badges-hero-section {
    background: linear-gradient(
      to bottom,
      rgba(var(--color-dark-background-alt-rgb), 0.5),
      var(--color-dark-background-alt)
    );
  }

  /* Service card wrapper and badge positioning */
  .service-card-wrapper {
    position: relative;
    transition: all 0.3s ease;
  }

  .service-badge-container {
    position: absolute;
    top: -12px;
    right: -12px;
    z-index: 20;
  }

  .service-badge {
    display: inline-flex;
    align-items: center;
    gap: 6px;
    padding: 8px 16px;
    border-radius: 9999px;
    font-size: 14px;
    font-weight: 600;
    color: white;
    white-space: nowrap;
    animation: pulse 2s infinite;
    box-shadow: 0 4px 14px rgba(0, 0, 0, 0.25);
  }

  .badge-icon {
    width: 16px;
    height: 16px;
    flex-shrink: 0;
  }

  .badge-text {
    line-height: 1;
  }

  /* Service badge color variants */
  .service-badge-popular {
    background: linear-gradient(
      135deg,
      var(--color-primary),
      var(--color-primary-dark)
    );
    box-shadow: 0 4px 14px rgba(var(--color-primary-rgb), 0.5);
  }

  .service-badge-recommended {
    background: linear-gradient(
      135deg,
      var(--color-accent),
      var(--color-accent-dark)
    );
    box-shadow: 0 4px 14px rgba(var(--color-accent-rgb), 0.5);
  }

  .service-badge-new {
    background: linear-gradient(135deg, var(--color-success), #0ea570);
    box-shadow: 0 4px 14px rgba(var(--color-success-rgb), 0.5);
  }

  /* Service card styles */
  .service-card-link {
    position: relative;
    transition: all 0.3s ease;
  }

  .service-card-wrapper:hover {
    transform: translateY(-5px);
  }

  .service-card-wrapper:hover .service-badge {
    animation: none;
    transform: scale(1.1);
  }

  @keyframes pulse {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.05);
    }
    100% {
      transform: scale(1);
    }
  }

  .btn-primary {
    background-color: var(--color-primary);
    color: white;
    border: none;
    transition: all 0.3s ease;
  }

  .btn-primary:hover {
    background-color: var(--color-primary-dark);
    transform: translateY(-2px);
  }

  .service-card a {
    text-decoration: none;
    color: inherit;
  }

  .service-card a:hover {
    color: inherit;
  }
</style>
